##  General ~/.bashrc of hnfong, version 1.0 ##

if [ "$PS1" ]; then

    function _display_git_branch() {
        # Originally this was done using "cd", but somehow MacOS's Terminal
        # didn't like it and printed a bunch of weird messages that look like
        # the terminal was going to exit...
        local _pwd=$PWD
        while [[ ! -f "$_pwd/".git/HEAD && "$_pwd" != "/" ]]; do
            _pwd=$(dirname "$_pwd")

            # Failsafe
            if [[ $_pwd = "" ]]; then
                _pwd=/
            fi
        done

        if [[ "$_pwd" != "/" ]]; then
            local mybranch=$(cat "$_pwd"/.git/HEAD)
            if [[ "$mybranch" =~ "heads/" ]]; then
                echo '['"${mybranch//*heads\//}"']'
            else
                echo '[(unknown)]'
            fi
        fi
    }

	# config
	. ~/.hnfong.conf

	# constants
	TERME='\[\e[0m\]'
	TERME30='\[\e[01;30m\]' # black
	TERME31='\[\e[01;31m\]' # red
	TERME32='\[\e[01;32m\]' # green
	TERME33='\[\e[01;33m\]' # yellow
	TERME34='\[\e[01;34m\]' # blue
	TERME35='\[\e[01;35m\]' # magenta
	TERME36='\[\e[01;36m\]' # cyan
	TERME37='\[\e[01;37m\]' # white

	############### --- General Options --- ###############

	# show something when Ctrl+C is pressed (mainly to avoid confusion by
	# spectators, since I use this key often and they'd think I pressed enter
	trap 'echo -n \(Ctrl+C\)' SIGINT

	os_platform="unknown"
	unamestr="`uname`"
	if [[ "$unamestr" = 'Linux' ]]; then
	    os_platform='linux'
	elif [[ "$unamestr" = 'FreeBSD' ]]; then
	    os_platform='freebsd'
	elif [[ "$unamestr" = 'Darwin' ]]; then
	    os_platform='darwin'
	fi

	if [[ $os_platform == 'linux' ]]; then
	   alias ls='ls --color=auto'
	elif [[ $os_platform == 'freebsd' ]]; then
	   alias ls='ls -G'
	elif [[ $os_platform == 'darwin' ]]; then
	   alias ls='ls -G'
	fi

    # enable color support of ls and also add handy aliases
    alias rm='rm -i'
    alias mv='mv -i'
    alias cp='cp -i'
	alias vi='vim -O'

	# default compilation flags
    export CFLAGS="-O2 -Wall"
    export CXXFLAGS="$CFLAGS"

	if [ "$TERM" = "screen" ]; then
		TITLEPS1='\[\ek\w\e\\\]\[\033]0;\h:(screen)\007\]'
		echo -ne '\033k~\033\\'
	else
		TITLEPS1='\[\033]0;\h:\w\007\]'
	fi

	# set prompt
	if [ "$SI_CONFIG_FANCY_PROMPT" = "1" ]; then
		PS1="$TITLEPS1$TERME34$SHLVL$TERME33.$TERME31\h:$TERME32\w$TERME\$(_display_git_branch)$TERME34>$TERME "
	else
		PS1='\u@\h:\w\$ '
	fi

    umask 022

	# workaround for screen (companion settings in .vimrc)
	if [ "$SI_CONFIG_VIM_SCREEN_WORKAROUND" = "1" ]  && [ "$TERM" = "screen" ]; then
		export REALTERM='xterm'
	else
		export REALTERM="$TERM"
	fi

	if [ "$SI_CONFIG_BASH_COMPLETION" = "1" ]; then
		if [ "$SI_CONFIG_WARN_BASH_COMPLETION" = "1" ]; then
			echo 'Note: enabling bash completion'
		fi
		source /etc/bash_completion
	fi

	if [ "$SI_CONFIG_TIMEOUT" = "1" ]; then
		TMOUT=3600					# 1 hour!!
	fi

	export EDITOR=vim

	if [[ -d ~/.homebrew/bin ]] && [[ ! "$PATH" =~ "$HOME/.homebrew/bin" ]]; then
		PATH=~/.homebrew/bin:"$PATH"
	fi

	if [[ -d ~/bin ]] && [[ ! "$PATH" =~ "$HOME/bin" ]] ; then
		PATH=~/bin:"$PATH"
	fi

	############# --- Machine Specific Scripts --- #############
	if [ -f ~/.bashrc."$HOSTNAME" ]; then
		source ~/.bashrc."$HOSTNAME"
	fi

    alias mcs=/Library/Frameworks/Mono.framework/Versions/5.16.1/bin/mcs
    alias mono=/Library/Frameworks/Mono.framework/Versions/5.16.1/bin/mono
fi
