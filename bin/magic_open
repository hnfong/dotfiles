#!/bin/bash

# set -x

function front_stripper() {
    local file_path;
    while read file_path; do
        while [[ -n "$file_path" && ! -e "$file_path" ]]; do
            local new_file_path=${file_path#*/}
            if [[ "$file_path" = "$new_file_path" ]]; then
                break;
            fi
            file_path=$new_file_path
        done
        echo $file_path
    done
}

original_args="$@"

function editor() {
    if [[ -z "$1" ]]; then
        if [[ -z "$original_args" ]]; then
            exec nvim -c ':Telescope oldfiles'
        else
            exec nvim -O "$original_args"
        fi
    else
        exec nvim $my_line -O "$@"
    fi
}

# Case: no arguments, just open as normal without arguments
if [[ -z "$1" ]]; then
    editor
fi


# vi -g '<git grep pattern>'
if [[ "$1" = "-g" ]]; then
    shift
    editor `git grep -l "$1"`
fi
#
# vi -r '<git ls-tree -r>'
if [[ "$1" = "-r" ]]; then
    shift
    editor `git ls-tree -r --name-only HEAD -- . | grep "$1"`
fi

my_path="$1"

my_line=
if [[ "$my_path" =~ :[0-9][0-9]*$ ]]; then
    splitter=(${my_path//:/ })
    my_path=${splitter[0]}
    my_line=+${splitter[1]}
fi

my_file=`echo "$my_path" | front_stripper`
if [[ -e "$my_file" ]]; then
    editor "$my_file"
else
    # editor `git status --porcelain  . | grep "^ M" | grep "$1" | awk '{print $2}' | front_stripper`
    ARGS=`git diff --name-only . | grep "$my_path" | front_stripper`
    if [[ -n "$ARGS" ]]; then
        editor $ARGS
    else
        editor `git ls-tree -r --name-only HEAD -- . | grep "$my_path"`
    fi
fi
